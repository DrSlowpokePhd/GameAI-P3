INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Action: spread_to_weakest_neutral_planet
| Sequence: Safe Attack
| | Check: have_largest_fleet
| | Action: smart_attack
| Action: smart_attack

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Order:1 17 50.0
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 26.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 37.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 35.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 6 17.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 14.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 15.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 26.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 27.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 7 23.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 7 26.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 10.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 11.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 13.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 14.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 61.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 62.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 10.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 11.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 48.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:17 9 32.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 11.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 29.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 27.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 11.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 28.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 19 29.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 26.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 9 27.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 23.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 10 24.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 53.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 5 54.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:10 19 22.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:5 19 39.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:19 5 22.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Action: smart_attack
ERROR:root:Error in bot.
Traceback (most recent call last):
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_bot.py", line 63, in <module>
    do_turn(planet_wars)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_bot.py", line 51, in do_turn
    behavior_tree.execute(planet_wars)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_nodes.py", line 52, in execute
    success = child_node.execute(state)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_nodes.py", line 8, in logged_fn
    result = fn(self, state)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/bt_nodes.py", line 89, in execute
    return self.action_function(state)
  File "/home/jamesd/Documents/CMPM146/GameAI-P3/behavior_tree_bot/behaviors.py", line 33, in smart_attack
    required_ships = weakest_planet.num_ships + state.distance(strongest_planet.ID, weakest_planet.ID ) * weakest_planet.growth_rate + 1
AttributeError: 'NoneType' object has no attribute 'ID'
