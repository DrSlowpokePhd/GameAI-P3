INFO:root:
Selector: High Level Ordering of Strategies
| Sequence: Spread Strategy
| | Check: if_neutral_planet_available
| | Action: spread_to_weakest_neutral_planet
| Sequence: Safe Attack
| | Check: have_largest_fleet
| | Action: smart_attack
| Sequence: Steal Neutral from Enemy
| | Check: if_neutral_planet_available
| | Check: have_largest_fleet
| | Action: steal_neutral_planet
| Sequence: Retreat to Largest
| | Check: have_largest_fleet
| | Action: retreat_to_largest
| Action: smart_attack

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Order:1 11 50.0
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Order:1 11 27.5
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Success
DEBUG:root:Result: Sequence: Spread Strategy -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 7 24.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 7 25.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:11 15 29.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:11 12 5.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 7 32.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 20 38.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Order:12 11 6.5
DEBUG:root:Result: Action: retreat_to_largest -> Success
DEBUG:root:Result: Sequence: Retreat to Largest -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Order:12 11 4.0
DEBUG:root:Result: Action: retreat_to_largest -> Success
DEBUG:root:Result: Sequence: Retreat to Largest -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: steal_neutral_planet
DEBUG:root:Result: Action: steal_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: retreat_to_largest
DEBUG:root:Result: Action: retreat_to_largest -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:11 8 17.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Success
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 8 9.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Sequence: Safe Attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 8 11.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 12 15.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:11 12 9.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:7 19 54.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:1 15 69.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:11 15 45.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:20 1 47.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:8 7 28.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:19 7 19.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:19 14 32.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:15 12 14.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:15 12 18.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Order:7 12 14.0
DEBUG:root:Result: Action: smart_attack -> Success
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Success
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

DEBUG:root:Executing:Selector: High Level Ordering of Strategies
DEBUG:root:Executing:Sequence: Spread Strategy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Action: spread_to_weakest_neutral_planet
DEBUG:root:Result: Action: spread_to_weakest_neutral_planet -> Failure
DEBUG:root:Result: Sequence: Spread Strategy -> Failure
DEBUG:root:Executing:Sequence: Safe Attack
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Safe Attack -> Failure
DEBUG:root:Executing:Sequence: Steal Neutral from Enemy
DEBUG:root:Executing:Check: if_neutral_planet_available
DEBUG:root:Result: Check: if_neutral_planet_available -> Success
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Steal Neutral from Enemy -> Failure
DEBUG:root:Executing:Sequence: Retreat to Largest
DEBUG:root:Executing:Check: have_largest_fleet
DEBUG:root:Result: Check: have_largest_fleet -> Failure
DEBUG:root:Result: Sequence: Retreat to Largest -> Failure
DEBUG:root:Executing:Action: smart_attack
DEBUG:root:Result: Action: smart_attack -> Failure
DEBUG:root:Result: Selector: High Level Ordering of Strategies -> Failure
DEBUG:root:Finish turn

